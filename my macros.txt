Blender shortcuts to be added 
Align Camera to View  Ctrl + Alt + Numpad 0
Top View  numpad 7
Bottom View  Ctrl + Numpad 7 
Front View Numpad 1
Back View Ctrl + Numpad 1
Right View Numpad 3
Left View Ctrl + Numpad 3

;XButton2::
;Send {Ctrl down}
;KeyWait XButton2
;Send {Ctrl up}
;return

!F8::
IfWinNotExist, ahk_class C4DR_WIN1_190_0
   Run, "C:\Program Files\MAXON\Cinema 4D R19\CINEMA 4D.exe"
if WinActive("ahk_class C4DR_WIN1_190_0")
   Send !{F1}
else
   WinActivate ahk_class C4DR_WIN1_190_0
Sleep, 100
Send {alt up}
return


Expand ps  (%+^1~) (expands selection in ps )*set a shortcut in ps: alt+shift+ctrl+1
Contract  ps  (%+^0~) (contract selection in ps )*set a shortcut in ps: alt+shift+ctrl+0
Deselect selection ps (^d)
reselect selection ps (+^d)
inverse selection ps (+^i)
Transform ps (^t) (transform tool in ps)
New layer ps (^%+n)

Premiere timeline zoom in(%{f11})
!F11::
Send, !{WheelUp}
Sleep, 100
Send {alt up}
return

Premiere timeline zoom in(%{f12})
!F12::
Send, !{WheelDown}
Sleep, 100
Send {alt up}
return

Group layers ps ctrl+g(^G)
Merge layers selected ps ctrl+e(^E)
Undo(^z)
Redo(+^z)(also in c4d it undos the view changes)
Zoom in (^=)
Zoom out (^-)
Default view (^0)
Duplicate layer(^j)
Move up ps (+{pdup})
Move down ps (+{pgdn})
Move right ps  (+^{pgdn})(also moves tab position in firefox to right)
Move left ps  (+^{pgup})(also moves tab position in firefox to left)
Screenshot (%{f7}) (takes screenshot save to pictures)*autohotkey script running to emulate ctrl+f7 as screenshot*
!F7:: 
Send {LWin down}{PrintScreen}{LWin up}
Sleep, 100
Send {alt up}
Return
Open and switch tabs for programs ( firefox,blender, file explorer,photoshop,word)
#IfWinActive

!F8::
IfWinNotExist, ahk_class GHOST_WindowClass
   Run, "C:\Program Files\Blender Foundation\Blender 2.83\blender.exe"
else
   WinActivate ahk_class GHOST_WindowClass
Sleep, 100
Send {alt up}
return

!F9::
IfWinNotExist, ahk_class CabinetWClass
   Run, explorer.exe
Groupadd, hexplorers, ahk_class CabinetWClass
if WinActive("ahk_exe explorer.exe")
   GroupActivate, hexplorers, r
else
   WinActivate ahk_class CabinetWClass
Sleep, 100
send {alt up}
return

!F10::
IfWinNotExist, ahk_class MozillaWindowClass
   Run, firefox.exe
if WinActive("ahk_class MozillaWindowClass")
   Send ^{pgup}
else
   WinActivate ahk_class MozillaWindowClass
Sleep, 150
Send {alt up}
return

F24::
IfWinNotExist, ahk_class Photoshop
   Run, photoshop.exe
if WinActive("ahk_class Photoshop")
   Send ^{tab}
else
   WinActivate ahk_class Photoshop
Sleep, 100
Send {alt up}
return

copy and paste smoothly script (activate script from macro set to run it)
#NoEnv  ; Recommended for performance and compatibility with future AutoHotkey releases.
; #Warn  ; Enable warnings to assist with detecting common errors.
SendMode Input  ; Recommended for new scripts due to its superior speed and reliability.
SetWorkingDir %A_ScriptDir%  ; Ensures a consistent starting directory.

LButton & RButton::
	Send ^v
        Return

~Lshift::
TimeButtonDown = %A_TickCount%
; Wait for it to be released
Loop
{
   Sleep 10
   GetKeyState, LshiftState, Lshift, P
   if LshiftState = U  ; Button has been released.
      break
   elapsed = %A_TickCount%
   elapsed -= %TimeButtonDown%
   if elapsed > 200  ; Button was held down long enough
   {
      x0 = A_CaretX
      y0 = A_CaretY
      Loop
   {
     Sleep 20                    ; yield time to others
     GetKeyState keystate, Lshift
     IfEqual keystate, U, {
       x = A_CaretX
       y = A_CaretY
       break
     }
   }
   if (x-x0 > 5 or x-x0 < -5 or y-y0 > 5 or y-y0 < -5)
   {                             ; Caret has moved
      clip0 := ClipBoardAll      ; save old clipboard
      ;ClipBoard =
      Send ^c                    ; selection -> clipboard
      ClipWait 1, 1              ; restore clipboard if no data
      IfEqual ClipBoard,, SetEnv ClipBoard, %clip0%
   }
      return
   }
}

~LButton::
MouseGetPos, xx
TimeButtonDown = %A_TickCount%
; Wait for it to be released
Loop
{
   Sleep 10
   GetKeyState, LButtonState, LButton, P
   if LButtonState = U  ; Button has been released.
   {
      If WinActive("Crimson Editor") and (xx < 25) ; Single Click in the Selection Area of CE
      {
         Send, ^c
         return
      }
      break
   }
   elapsed = %A_TickCount%
   elapsed -= %TimeButtonDown%
   if elapsed > 200  ; Button was held down too long, so assume it's not a double-click.
   {
      MouseGetPos x0, y0            ; save start mouse position
      Loop
   {
     Sleep 20                    ; yield time to others
     GetKeyState keystate, LButton
     IfEqual keystate, U, {
       MouseGetPos x, y          ; position when button released
       break
     }
   }
   if (x-x0 > 5 or x-x0 < -5 or y-y0 > 5 or y-y0 < -5)
   {                             ; mouse has moved
      clip0 := ClipBoardAll      ; save old clipboard
      ;ClipBoard =
      Send ^c                    ; selection -> clipboard
      ClipWait 1, 1              ; restore clipboard if no data
      IfEqual ClipBoard,, SetEnv ClipBoard, %clip0%
   }
      return
   }
}
; Otherwise, button was released quickly enough.  Wait to see if it's a double-click:
TimeButtonUp = %A_TickCount%
Loop
{
   Sleep 10
   GetKeyState, LButtonState, LButton, P
   if LButtonState = D  ; Button has been pressed down again.
      break
   elapsed = %A_TickCount%
   elapsed -= %TimeButtonUp%
   if elapsed > 350  ; No click has occurred within the allowed time, so assume it's not a double-click.
      return
}

;Button pressed down again, it's at least a double-click
TimeButtonUp2 = %A_TickCount%
Loop
{
   Sleep 10
   GetKeyState, LButtonState2, LButton, P
   if LButtonState2 = U  ; Button has been released a 2nd time, let's see if it's a tripple-click.
      break
}
;Button released a 2nd time
TimeButtonUp3 = %A_TickCount%
Loop
{
   Sleep 10
   GetKeyState, LButtonState3, LButton, P
   if LButtonState3 = D  ; Button has been pressed down a 3rd time.
      break
   elapsed = %A_TickCount%
   elapsed -= %TimeButtonUp%
   if elapsed > 350  ; No click has occurred within the allowed time, so assume it's not a tripple-click.
   {  ;Double-click
      Send, ^c
      return
   }
}
;Tripple-click:
   Sleep, 100
   Send, ^c
return

~^a::Send, ^c ;Ctl+A = Select All, then Copy


F23::

IfWinNotExist, ahk_class ApplicationFrameWindow
   Run, "D:\IMPORTANT\PDF Reader by Xodo"
Groupadd, xodox, ahk_class ApplicationFrameWindow
If WinActive("ahk_exe ApplicationFrameHost.exe")
   { Send ^{tab} 
      GroupActivate, xodox, r
              }
else
   WinActivate ahk_class ApplicationFrameWindow
Return
try and improve the copy paste ahk script by changing the copy to something simple rbutton and lbutton state
Increase/decrease brush hardness
â€¢	WINDOWS: }/{
Brush hardness is just as important, so get it right with this shortcut.+

Audacity zoom in ctrl+1
Audacity zoom out ctrl+3
 
CODEBLUCKS RUN (^{F10})


